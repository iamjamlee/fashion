def half_search(nums, tgt):
    if len(nums) == 0:
        return -1
    low = 0
    high = len(nums) - 1

    while low <= high:
        mid = (low + high) / 2
        if nums[mid] < tgt:
            low = mid + 1
        elif nums[mid] > tgt:
            high = mid - 1
        else:
            return mid

def rotated_half_search(nums, tgt):
    if not nums:
        return -1
    low = 0
    high = len(nums) - 1

    while low <= high:
        mid = (low + high) / 2
        if tgt == nums[mid]:
            return mid

        if nums[low] <= nums[mid]:
            if nums[low] <= tgt <= nums[mid]:
                high = mid - 1
            else:
                low = mid + 1
        else:
            if nums[mid] <= tgt <= nums[high]:
                low = mid + 1
            else:
                high = mid - 1
    return -1
